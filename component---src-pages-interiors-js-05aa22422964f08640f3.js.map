{"version":3,"file":"component---src-pages-interiors-js-05aa22422964f08640f3.js","mappings":"8MAKMA,EAAUC,EAAAA,QAAAA,GAAAA,WAAH,gEAAGA,CAAH,qOA0Cb,EApBoB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OAChB,gBAACH,EAAD,KACI,gBAAC,KAAD,CACII,GAAID,EACJE,MAAO,CACHC,MAAO,OACPC,OAAQ,SAEZ,gBAAC,EAAAC,EAAD,CACIN,MAAOA,EACPO,IAAI,QACJJ,MAAO,CACHC,MAAO,OACPC,OAAQ,aClCtBP,EAAUC,EAAAA,QAAAA,GAAAA,WAAH,gEAAGA,CAAH,0EAgBb,EAVqB,SAAC,GAAD,IAAGS,EAAH,EAAGA,SAAH,OACjB,gBAAC,EAAD,KACKA,EAASC,KAAI,SAACC,GACX,IAAMV,GAAQW,EAAAA,EAAAA,GAASD,EAAQE,YAAYC,YACrCC,EAAOJ,EAAQE,YAAYE,KACjC,OAAO,gBAAC,EAAD,CAAaC,IAAKD,EAAMd,MAAOA,EAAOC,KAAMa,U,wECe/D,UA1BsB,WAClB,IAAME,GAAOC,EAAAA,EAAAA,IAAe,cAkB5B,OACI,gBAAC,IAAD,CAAQC,MAAM,aACV,gBAAC,IAAD,CAAcV,SAAUQ,EAAKG,OAAOC,W,oDCrB1CC,EAAQ,CACV,CAAC,WAAY,YACb,CAAC,YAAa,aACd,CAAC,SAAU,UACX,CAAC,QAAS,aAGRvB,EAAUC,EAAAA,QAAAA,IAAAA,WAAH,2DAAGA,CAAH,mGASPuB,EAAOvB,EAAAA,QAAAA,KAAAA,WAAH,wDAAGA,CAAH,yBAIJwB,EAASxB,EAAAA,QAAAA,OAAAA,WAAH,0DAAGA,CAAH,mGASNyB,EAAUzB,EAAAA,QAAAA,GAAAA,WAAH,2DAAGA,CAAH,sDAMP0B,EAAU1B,EAAAA,QAAAA,GAAAA,WAAH,2DAAGA,CAAH,4CAMP2B,EAAO3B,EAAAA,QAAAA,IAAAA,WAAH,wDAAGA,CAAH,oDAMJ4B,EAAU5B,EAAAA,QAAAA,QAAAA,WAAH,2DAAGA,CAAH,+FAQP6B,EAAe7B,EAAAA,QAAAA,GAAAA,WAAH,gEAAGA,CAAH,kOAmBZ8B,EAAU9B,EAAAA,QAAAA,QAAAA,WAAH,2DAAGA,CAAH,yCAOP+B,EAAS/B,EAAAA,QAAAA,OAAAA,WAAH,0DAAGA,CAAH,oCAmCZ,IA9Be,SAAC,GAAyB,IAAvBgC,EAAsB,EAAtBA,SAAUb,EAAY,EAAZA,MACxB,OACI,gBAACpB,EAAD,KACI,gBAACyB,EAAD,KACI,gBAAC,KAAD,CAAMrB,GAAG,IAAI8B,MAAO,CAAEC,MAAM,IACxB,gBAACP,EAAD,OAEJ,2BACI,gBAACF,EAAD,KACKH,EAAMZ,KAAI,SAACyB,GAAD,OACP,gBAACT,EAAD,CAASV,IAAKmB,EAAK,IACf,gBAAC,KAAD,CAAMhC,GAAE,IAAMgC,EAAK,IAAOA,EAAK,WAMnD,gBAACZ,EAAD,KACI,gBAACK,EAAD,KACI,gBAACC,EAAD,KAAeV,GACf,gBAACW,EAAD,KAAUE,KAGlB,gBAACD,EAAD,KACI","sources":["webpack://architecture-portfolio/./src/components/ProjectLink.js","webpack://architecture-portfolio/./src/components/ProjectsList.js","webpack://architecture-portfolio/./src/pages/interiors.js","webpack://architecture-portfolio/./src/templates/Layout/Layout.js"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport styled from 'styled-components';\r\nimport { GatsbyImage } from 'gatsby-plugin-image';\r\n\r\nconst Wrapper = styled.li`\r\n    position: relative;\r\n    display: block;\r\n    height: 12vw;\r\n    width: 12vw;\r\n    overflow: hidden;\r\n\r\n    &:before {\r\n        content: 'title';\r\n        opacity: 0;\r\n        position: absolute;\r\n        z-index: 100;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        color: white;\r\n    }\r\n    &:hover:before {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst ProjectLink = ({ image, slug }) => (\r\n    <Wrapper>\r\n        <Link\r\n            to={slug}\r\n            style={{\r\n                width: '100%',\r\n                height: '100%',\r\n            }}>\r\n            <GatsbyImage\r\n                image={image}\r\n                alt='image'\r\n                style={{\r\n                    width: '100%',\r\n                    height: '100%',\r\n                }}\r\n            />\r\n        </Link>\r\n    </Wrapper>\r\n);\r\n\r\nexport default ProjectLink;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { getImage } from 'gatsby-plugin-image';\r\n\r\nimport ProjectLink from './ProjectLink';\r\n\r\nconst Wrapper = styled.ul`\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    grid-gap: 16px;\r\n`;\r\n\r\nconst ProjectsList = ({ projects }) => (\r\n    <Wrapper>\r\n        {projects.map((project) => {\r\n            const image = getImage(project.frontmatter.hero_image);\r\n            const path = project.frontmatter.path;\r\n            return <ProjectLink key={path} image={image} slug={path} />;\r\n        })}\r\n    </Wrapper>\r\n);\r\n\r\nexport default ProjectsList;\r\n","import React from 'react';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\n\r\nimport Layout from '../templates/Layout/Layout';\r\nimport ProjectsList from '../components/ProjectsList';\r\n\r\nconst InteriorsPage = () => {\r\n    const data = useStaticQuery(graphql`\r\n        {\r\n            allMdx(filter: { frontmatter: { type: { eq: \"interior\" } } }) {\r\n                nodes {\r\n                    id\r\n                    frontmatter {\r\n                        path\r\n                        hero_image {\r\n                            childImageSharp {\r\n                                gatsbyImageData\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    `);\r\n\r\n    return (\r\n        <Layout title='Interiors'>\r\n            <ProjectsList projects={data.allMdx.nodes} />\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default InteriorsPage;\r\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport styled from 'styled-components';\r\n\r\nimport styles from './Layout.module.css';\r\n\r\nconst paths = [\r\n    ['projects', 'projects'],\r\n    ['interiors', 'interiors'],\r\n    ['awards', 'awards'],\r\n    ['about', 'about me'],\r\n];\r\n\r\nconst Wrapper = styled.div`\r\n    display: grid;\r\n    grid-template-rows: 160px 1fr 20px;\r\n    min-height: 100vh;\r\n    max-width: 1280px;\r\n    margin: auto;\r\n    /* background-color: lightgray; */\r\n`;\r\n\r\nconst Main = styled.main`\r\n    align-self: stretch;\r\n`;\r\n\r\nconst Header = styled.header`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 100%;\r\n    /* background-color: grey; */\r\n`;\r\n\r\nconst NavList = styled.ul`\r\n    display: flex;\r\n    flex-direction: row;\r\n    list-style: none;\r\n`;\r\n\r\nconst NavItem = styled.li`\r\n    margin-left: 60px;\r\n    /* color: black; */\r\n    text-decoration: none;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n    height: 40px;\r\n    width: 40px;\r\n    background-color: black;\r\n`;\r\n\r\nconst Section = styled.section`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    height: 100%;\r\n    padding: 20px 0;\r\n`;\r\n\r\nconst SectionTitle = styled.h2`\r\n    position: relative;\r\n    margin-left: 13%;\r\n    font-size: 36px;\r\n    font-weight: 800;\r\n    letter-spacing: 1.4px;\r\n    &::before {\r\n        content: '';\r\n        position: absolute;\r\n        top: 24px;\r\n        right: -18px;\r\n        display: block;\r\n        height: 10px;\r\n        width: 10px;\r\n        background-color: black;\r\n        z-index: 1000;\r\n    }\r\n`;\r\n\r\nconst Content = styled.article`\r\n    height: 100%;\r\n    /* width: 65%; */\r\n    /* padding: 0 80px; */\r\n    background-color: white;\r\n`;\r\n\r\nconst Footer = styled.footer`\r\n    height: 100%;\r\n    text-align: center;\r\n`;\r\n\r\nconst Layout = ({ children, title }) => {\r\n    return (\r\n        <Wrapper>\r\n            <Header>\r\n                <Link to='/' state={{ logo: false }}>\r\n                    <Logo />\r\n                </Link>\r\n                <nav>\r\n                    <NavList>\r\n                        {paths.map((item) => (\r\n                            <NavItem key={item[1]}>\r\n                                <Link to={`/${item[0]}`}>{item[1]}</Link>\r\n                            </NavItem>\r\n                        ))}\r\n                    </NavList>\r\n                </nav>\r\n            </Header>\r\n            <Main>\r\n                <Section>\r\n                    <SectionTitle>{title}</SectionTitle>\r\n                    <Content>{children}</Content>\r\n                </Section>\r\n            </Main>\r\n            <Footer>\r\n                <p>code by</p>\r\n            </Footer>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n"],"names":["Wrapper","styled","image","slug","to","style","width","height","G","alt","projects","map","project","getImage","frontmatter","hero_image","path","key","data","useStaticQuery","title","allMdx","nodes","paths","Main","Header","NavList","NavItem","Logo","Section","SectionTitle","Content","Footer","children","state","logo","item"],"sourceRoot":""}