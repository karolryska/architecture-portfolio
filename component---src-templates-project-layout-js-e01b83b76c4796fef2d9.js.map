{"version":3,"file":"component---src-templates-project-layout-js-e01b83b76c4796fef2d9.js","mappings":"oKAMMA,EAAQ,CACV,CAAC,WAAY,YACb,CAAC,YAAa,aACd,CAAC,SAAU,UACX,CAAC,QAAS,aAGRC,EAAUC,EAAAA,QAAAA,IAAAA,WAAH,2DAAGA,CAAH,mGASPC,EAAOD,EAAAA,QAAAA,KAAAA,WAAH,wDAAGA,CAAH,yBAIJE,EAASF,EAAAA,QAAAA,OAAAA,WAAH,0DAAGA,CAAH,mGASNG,EAAUH,EAAAA,QAAAA,GAAAA,WAAH,2DAAGA,CAAH,sDAMPI,EAAUJ,EAAAA,QAAAA,GAAAA,WAAH,2DAAGA,CAAH,4CAMPK,EAAOL,EAAAA,QAAAA,IAAAA,WAAH,wDAAGA,CAAH,oDAMJM,EAAUN,EAAAA,QAAAA,QAAAA,WAAH,2DAAGA,CAAH,+FAQPO,EAAeP,EAAAA,QAAAA,GAAAA,WAAH,gEAAGA,CAAH,kOAmBZQ,EAAUR,EAAAA,QAAAA,QAAAA,WAAH,2DAAGA,CAAH,yCAOPS,EAAST,EAAAA,QAAAA,OAAAA,WAAH,0DAAGA,CAAH,oCAiCZ,IA5Be,SAAC,GAAyB,IAAvBU,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACxB,OACI,gBAACZ,EAAD,KACI,gBAACG,EAAD,KACI,gBAAC,KAAD,CAAMU,GAAG,IAAIC,MAAO,CAAEC,MAAM,IACxB,gBAACT,EAAD,OAEJ,2BACI,gBAACF,EAAD,KACKL,EAAMiB,KAAI,SAAAC,GAAI,OACX,gBAACZ,EAAD,CAASa,IAAKD,EAAK,IACf,gBAAC,KAAD,CAAMJ,GAAE,IAAMI,EAAK,IAAOA,EAAK,WAMnD,gBAACf,EAAD,KACI,gBAACK,EAAD,KACI,gBAACC,EAAD,KAAeI,GACf,gBAACH,EAAD,KAAUE,KAGlB,gBAACD,EAAD,KAAQ,wC,2GC9GdV,EAAUC,EAAAA,QAAAA,IAAAA,WAAH,4DAAGA,CAAH,qDAMPkB,EAAYlB,EAAAA,QAAAA,IAAAA,WAAH,8DAAGA,CAAH,4EAOTmB,EAAkBnB,EAAAA,QAAAA,IAAAA,WAAH,oEAAGA,CAAH,8EAOfoB,EAAQpB,EAAAA,QAAAA,IAAAA,WAAH,0DAAGA,CAAH,8CA4BX,EAvBgB,SAAC,GAAD,IAAGqB,EAAH,EAAGA,OAAH,OACZ,gBAACtB,EAAD,KACI,gBAACmB,EAAD,MACA,gBAACC,EAAD,KACKE,EAAON,KAAI,SAAAC,GACR,IAAMM,GAAQC,EAAAA,EAAAA,GAASP,GACvB,OACI,gBAACI,EAAD,CAAOH,IAAKD,EAAKQ,IACb,gBAAC,EAAAC,EAAD,CACIH,MAAOA,EACPI,IAAI,QACJC,MAAO,CACHC,MAAO,OACPC,OAAQ,iBCVxC,EA5BsB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAE3B,OADAC,QAAQC,IAAIF,GAER,gBAACG,EAAA,EAAD,CAAQvB,MAAOmB,EAAKK,IAAIC,YAAYzB,OAChC,gBAAC,EAAD,CAASU,OAAQS,EAAKO,QAAQC","sources":["webpack://architecture-portfolio/./src/templates/Layout/Layout.js","webpack://architecture-portfolio/./src/components/Gallery.js","webpack://architecture-portfolio/./src/templates/projectLayout.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport styled from \"styled-components\";\r\n\r\nimport styles from \"./Layout.module.css\";\r\n\r\nconst paths = [\r\n    [\"projects\", \"projects\"],\r\n    [\"interiors\", \"interiors\"],\r\n    [\"awards\", \"awards\"],\r\n    [\"about\", \"about me\"]\r\n]\r\n\r\nconst Wrapper = styled.div`\r\n    display: grid;\r\n    grid-template-rows: 160px 1fr 20px;\r\n    min-height: 100vh;\r\n    max-width: 1280px;\r\n    margin: auto;\r\n    /* background-color: lightgray; */\r\n`;\r\n\r\nconst Main = styled.main`\r\n    align-self: stretch;\r\n`;\r\n\r\nconst Header = styled.header`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 100%;\r\n    /* background-color: grey; */\r\n`;\r\n\r\nconst NavList = styled.ul`\r\n    display: flex;\r\n    flex-direction: row;\r\n    list-style: none;\r\n`;\r\n\r\nconst NavItem = styled.li`\r\n    margin-left: 60px;\r\n    /* color: black; */\r\n    text-decoration: none;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n    height: 40px;\r\n    width: 40px;\r\n    background-color: black;\r\n`;\r\n\r\nconst Section = styled.section`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    height: 100%;\r\n    padding: 20px 0;\r\n`;\r\n\r\nconst SectionTitle = styled.h2`\r\n    position: relative;\r\n    margin-left: 13%;\r\n    font-size: 36px;\r\n    font-weight: 800;\r\n    letter-spacing: 1.4px;\r\n    &::before {\r\n        content: \"\";\r\n        position: absolute;\r\n        top: 24px;\r\n        right: -18px;\r\n        display: block;\r\n        height: 10px;\r\n        width: 10px;\r\n        background-color: black;\r\n        z-index: 1000;\r\n    }\r\n`;\r\n\r\nconst Content = styled.article`\r\n    height: 100%;\r\n    /* width: 65%; */\r\n    /* padding: 0 80px; */\r\n    background-color: white;\r\n`;\r\n\r\nconst Footer = styled.footer`\r\n    height: 100%;\r\n    text-align: center;\r\n`;\r\n\r\nconst Layout = ({ children, title }) => {\r\n    return (\r\n        <Wrapper>\r\n            <Header>\r\n                <Link to=\"/\" state={{ logo: false }}>\r\n                    <Logo />\r\n                </Link>\r\n                <nav>\r\n                    <NavList>\r\n                        {paths.map(item => (\r\n                            <NavItem key={item[1]}>\r\n                                <Link to={`/${item[0]}`}>{item[1]}</Link>\r\n                            </NavItem>\r\n                        ))}\r\n                    </NavList>\r\n                </nav>\r\n            </Header>\r\n            <Main>\r\n                <Section>\r\n                    <SectionTitle>{title}</SectionTitle>\r\n                    <Content>{children}</Content>\r\n                </Section>\r\n            </Main>\r\n            <Footer><p>code by</p></Footer>\r\n        </Wrapper>\r\n    )\r\n};\r\n\r\nexport default Layout;","import React from \"react\";\r\nimport { getImage } from \"gatsby-plugin-image\";\r\nimport { GatsbyImage } from \"gatsby-plugin-image\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 600px;\r\n`;\r\n\r\nconst MainImage = styled.div`\r\n    height: 400px;\r\n    width: 100%;\r\n    margin-bottom: 20px;\r\n    background-color: lightgray; \r\n`;\r\n\r\nconst ImagesContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    grid-gap: 20px;\r\n    width: 100%;\r\n`;\r\n\r\nconst Image = styled.div`\r\n    height: 100px;\r\n    background-color: lightgray; \r\n`;\r\n\r\nconst Gallery = ({ images }) => (\r\n    <Wrapper>\r\n        <MainImage />\r\n        <ImagesContainer>\r\n            {images.map(item => {\r\n                const image = getImage(item);\r\n                return (\r\n                    <Image key={item.id}>\r\n                        <GatsbyImage \r\n                            image={image}\r\n                            alt=\"image\" \r\n                            style={{\r\n                                width: \"100%\",\r\n                                height: \"100%\",\r\n                            }}\r\n                        />\r\n                    </Image>\r\n                 )\r\n            })}\r\n        </ImagesContainer>\r\n    </Wrapper>\r\n);\r\n\r\nexport default Gallery;","import React from \"react\";\r\nimport Layout from \"./Layout/Layout\";\r\nimport { graphql } from \"gatsby\";\r\nimport Gallery from \"../components/Gallery\";\r\n\r\nconst projectLayout = ({ data, pageContext }) => {\r\n    console.log(pageContext);\r\n    return (\r\n        <Layout title={data.mdx.frontmatter.title}>\r\n            <Gallery images={data.allFile.nodes}></Gallery>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport const query = graphql`\r\n    query Title($id: String!, $dir: String) {\r\n        mdx(id: {eq: $id}) {\r\n            frontmatter {\r\n                title\r\n            }\r\n            slug\r\n        }\r\n        allFile(filter: {extension: {eq: \"jpg\"}, relativeDirectory: {eq: $dir}}) {\r\n            nodes {\r\n                id\r\n                childImageSharp {\r\n                    gatsbyImageData\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default projectLayout;"],"names":["paths","Wrapper","styled","Main","Header","NavList","NavItem","Logo","Section","SectionTitle","Content","Footer","children","title","to","state","logo","map","item","key","MainImage","ImagesContainer","Image","images","image","getImage","id","G","alt","style","width","height","data","pageContext","console","log","Layout","mdx","frontmatter","allFile","nodes"],"sourceRoot":""}