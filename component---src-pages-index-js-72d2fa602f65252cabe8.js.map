{"version":3,"file":"component---src-pages-index-js-72d2fa602f65252cabe8.js","mappings":"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","sources":["webpack://architecture-portfolio/./src/components/MobileList/MobileList.styles.js","webpack://architecture-portfolio/./src/components/MobileList/MobileList.js","webpack://architecture-portfolio/./src/components/ProjectLink/ProjectLink.styles.js","webpack://architecture-portfolio/./src/components/ProjectLink/ProjectLink.js","webpack://architecture-portfolio/./src/components/ProjectsList/ProjectsList.styles.js","webpack://architecture-portfolio/./src/components/ProjectsList/ProjectsList.js","webpack://architecture-portfolio/./src/pages/index.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.ul`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    padding: 0;\r\n    margin: 0;\r\n`;\r\n\r\nexport const Project = styled.li`\r\n    display: block;\r\n    height: 80vw;\r\n    width: 80vw;\r\n    margin-bottom: 16px;\r\n\r\n    &:nth-last-child(1) {\r\n        margin-bottom: 0;\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport { getImage } from 'gatsby-plugin-image';\r\nimport { Wrapper, Project } from './MobileList.styles';\r\nimport ProjectLink from '../ProjectLink/ProjectLink';\r\n\r\nconst MobileList = ({ projects, pathType }) => {\r\n    return (\r\n        <Wrapper>\r\n            {projects.map((project) => {\r\n                const image = getImage(project.frontmatter.hero_image);\r\n                const type = project.frontmatter.type;\r\n                const path = project.frontmatter.path;\r\n                const absolutePath = type === 'project' ? `projects/${path}` : `interiors/${path}`;\r\n\r\n                return (\r\n                    <Project key={project.id}>\r\n                        <ProjectLink\r\n                            image={image}\r\n                            slug={pathType === 'absolute' ? absolutePath : path}\r\n                            title={path}\r\n                        />\r\n                    </Project>\r\n                );\r\n            })}\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default MobileList;\r\n","import styled from 'styled-components';\r\nimport { Link } from 'gatsby';\r\nimport { GatsbyImage } from 'gatsby-plugin-image';\r\n\r\nexport const StyledGatsbyImage = styled(GatsbyImage)`\r\n    display: block;\r\n    height: 100%;\r\n    width: 100%;\r\n    overflow: hidden;\r\n\r\n    @media (min-width: 769px) {\r\n        position: relative;\r\n\r\n        &::before {\r\n            content: '';\r\n            position: absolute;\r\n            z-index: 100;\r\n            top: 0;\r\n            left: 0;\r\n            height: 100%;\r\n            width: 100%;\r\n            background-color: ${(props) => props.theme.colors.black};\r\n            opacity: 0;\r\n            transition: 0.2s;\r\n        }\r\n\r\n        &::after {\r\n            content: '${(props) => props.title}';\r\n            position: absolute;\r\n            z-index: 100;\r\n            top: 50%;\r\n            left: 50%;\r\n            font-size: 40px;\r\n            font-weight: 500;\r\n            letter-spacing: 0.4px;\r\n            color: ${(props) => props.theme.colors.white};\r\n            transform: translate(-50%, -50%);\r\n            text-transform: uppercase;\r\n            opacity: 0;\r\n            transition: 0.2s;\r\n        }\r\n\r\n        &:hover:before {\r\n            opacity: 0.7;\r\n        }\r\n\r\n        &:hover:after {\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n    height: 100%;\r\n    width: 100%;\r\n`;\r\n","import React from 'react';\r\n\r\nimport { StyledLink, StyledGatsbyImage } from './ProjectLink.styles';\r\n\r\nconst ProjectLink = ({ image, title, slug }) => {\r\n    return (\r\n        <StyledLink to={slug}>\r\n            <StyledGatsbyImage image={image} alt={slug} title={title} />\r\n        </StyledLink>\r\n    );\r\n};\r\n\r\nexport default ProjectLink;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.ul`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    padding: 0;\r\n    margin: 0;\r\n    align-items: center;\r\n`;\r\n\r\nconst first = (wrapperWidth) => {\r\n    return `\r\n        margin-bottom: -${wrapperWidth * 0.5 * 0.4}px;\r\n        transform: translate(40%);\r\n        height: ${wrapperWidth * 0.5}px;\r\n        width: ${wrapperWidth * 0.5}px;\r\n    `;\r\n};\r\nconst second = (wrapperWidth) => {\r\n    return `\r\n        margin-bottom: ${wrapperWidth * 0.35 * 0.1}px;\r\n        transform: translateX(-30%);\r\n        height: ${wrapperWidth * 0.35}px;\r\n        width: ${wrapperWidth * 0.35}px;\r\n    `;\r\n};\r\n\r\nconst third = (wrapperWidth) => {\r\n    return `\r\n        margin-bottom: -${wrapperWidth * 0.5 * 0.3}px;\r\n        transform: translateX(40%);\r\n        height: ${wrapperWidth * 0.35}px;\r\n        width: ${wrapperWidth * 0.35}px;\r\n        z-index: 100;\r\n    `;\r\n};\r\n\r\nconst fourth = (wrapperWidth) => {\r\n    return `\r\n        margin-bottom: ${wrapperWidth * 0.35 * 0.1}px;\r\n        transform: translateX(-40%);\r\n        height: ${wrapperWidth * 0.5}px;\r\n        width: ${wrapperWidth * 0.5}px;\r\n    `;\r\n};\r\n\r\nexport const Project = styled.li`\r\n    display: block;\r\n    margin-bottom: 0;\r\n    ${(props) => props.number === 1 && first(props.wrapperWidth)};\r\n    ${(props) => props.number === 2 && second(props.wrapperWidth)};\r\n    ${(props) => props.number === 3 && third(props.wrapperWidth)};\r\n    ${(props) => props.number === 4 && fourth(props.wrapperWidth)};\r\n`;\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport { getImage } from 'gatsby-plugin-image';\r\nimport { Wrapper, Project } from './ProjectsList.styles';\r\nimport ProjectLink from '../ProjectLink/ProjectLink';\r\n\r\nconst ProjectsList = ({ projects }) => {\r\n    const [wrapperWidth, setWrapperWidth] = useState();\r\n    const wrapperRef = useRef();\r\n    let counter = 0;\r\n\r\n    const setWidth = () => setWrapperWidth(wrapperRef.current.offsetWidth);\r\n\r\n    useEffect(() => {\r\n        wrapperRef.current && setWidth();\r\n        window.addEventListener('resize', setWidth);\r\n\r\n        return () => window.removeEventListener('resize', setWidth);\r\n    }, []);\r\n\r\n    return (\r\n        <Wrapper ref={wrapperRef}>\r\n            {projects.map((project) => {\r\n                const image = getImage(project.frontmatter.hero_image);\r\n                const type = project.frontmatter.type;\r\n                const path = project.frontmatter.path;\r\n                const typePath = type === 'project' ? `projects/${path}` : `interiors/${path}`;\r\n\r\n                counter === 4 ? (counter = 1) : counter++;\r\n                const counterValue = counter;\r\n\r\n                return (\r\n                    <Project key={project.id} number={counterValue} wrapperWidth={wrapperWidth}>\r\n                        <ProjectLink image={image} slug={typePath} title={path} />\r\n                    </Project>\r\n                );\r\n            })}\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default ProjectsList;\r\n","import React from 'react';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\n\r\nimport useWidth from '../hooks/useWidth';\r\nimport Main from '../templates/components/Main/Main';\r\nimport MobileList from '../components/MobileList/MobileList';\r\nimport ProjectsList from '../components/ProjectsList/ProjectsList';\r\n\r\nconst IndexPage = () => {\r\n    const [isMobile] = useWidth();\r\n\r\n    const data = useStaticQuery(graphql`\r\n        {\r\n            allMdx(filter: { frontmatter: { type: { eq: \"project\" } } }) {\r\n                nodes {\r\n                    frontmatter {\r\n                        path\r\n                        type\r\n                        hero_image {\r\n                            childImageSharp {\r\n                                gatsbyImageData\r\n                            }\r\n                        }\r\n                    }\r\n                    id\r\n                }\r\n            }\r\n            mdx(frontmatter: { title: { eq: \"index\" } }) {\r\n                body\r\n            }\r\n        }\r\n    `);\r\n\r\n    return (\r\n        <Main title='Featured' description={data.mdx.body} animation={true} fullWidth>\r\n            {isMobile ? (\r\n                <MobileList projects={data.allMdx.nodes} pathType='absolute' />\r\n            ) : (\r\n                <ProjectsList projects={data.allMdx.nodes} pathType='absolute' />\r\n            )}\r\n        </Main>\r\n    );\r\n};\r\n\r\nexport default IndexPage;\r\n"],"names":["Wrapper","styled","Project","projects","pathType","map","project","image","getImage","frontmatter","hero_image","type","path","absolutePath","key","id","ProjectLink","slug","title","StyledGatsbyImage","GatsbyImage","props","theme","colors","black","white","StyledLink","Link","to","alt","number","wrapperWidth","useState","setWrapperWidth","wrapperRef","useRef","counter","setWidth","current","offsetWidth","useEffect","window","addEventListener","removeEventListener","ref","typePath","counterValue","isMobile","useWidth","data","useStaticQuery","Main","description","mdx","body","animation","fullWidth","MobileList","allMdx","nodes"],"sourceRoot":""}