{"version":3,"file":"component---src-templates-project-layout-js-7d7e0764565ee5ccab64.js","mappings":"oKAMMA,EAAQ,CACV,CAAC,WAAY,YACb,CAAC,YAAa,aACd,CAAC,SAAU,UACX,CAAC,QAAS,aAGRC,EAAUC,EAAAA,QAAAA,IAAAA,WAAH,2DAAGA,CAAH,mGASPC,EAAOD,EAAAA,QAAAA,KAAAA,WAAH,wDAAGA,CAAH,yBAIJE,EAASF,EAAAA,QAAAA,OAAAA,WAAH,0DAAGA,CAAH,mGASNG,EAAUH,EAAAA,QAAAA,GAAAA,WAAH,2DAAGA,CAAH,sDAMPI,EAAUJ,EAAAA,QAAAA,GAAAA,WAAH,2DAAGA,CAAH,4CAMPK,EAAOL,EAAAA,QAAAA,IAAAA,WAAH,wDAAGA,CAAH,oDAMJM,EAAUN,EAAAA,QAAAA,QAAAA,WAAH,2DAAGA,CAAH,+FAQPO,EAAeP,EAAAA,QAAAA,GAAAA,WAAH,gEAAGA,CAAH,kOAmBZQ,EAAUR,EAAAA,QAAAA,QAAAA,WAAH,2DAAGA,CAAH,yCAOPS,EAAST,EAAAA,QAAAA,OAAAA,WAAH,0DAAGA,CAAH,oCAmCZ,IA9Be,SAAC,GAAyB,IAAvBU,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACxB,OACI,gBAACZ,EAAD,KACI,gBAACG,EAAD,KACI,gBAAC,KAAD,CAAMU,GAAG,IAAIC,MAAO,CAAEC,MAAM,IACxB,gBAACT,EAAD,OAEJ,2BACI,gBAACF,EAAD,KACKL,EAAMiB,KAAI,SAACC,GAAD,OACP,gBAACZ,EAAD,CAASa,IAAKD,EAAK,IACf,gBAAC,KAAD,CAAMJ,GAAE,IAAMI,EAAK,IAAOA,EAAK,WAMnD,gBAACf,EAAD,KACI,gBAACK,EAAD,KACI,gBAACC,EAAD,KAAeI,GACf,gBAACH,EAAD,KAAUE,KAGlB,gBAACD,EAAD,KACI,wC,2GCzGVV,EAAUC,EAAAA,QAAAA,IAAAA,WAAH,4DAAGA,CAAH,qDAMPkB,EAAYlB,EAAAA,QAAAA,IAAAA,WAAH,8DAAGA,CAAH,4EAZC,IAmBhBmB,QAAQC,IAAIF,EAAUG,OAEtB,IAAMC,EAAkBtB,EAAAA,QAAAA,IAAAA,WAAH,oEAAGA,CAAH,8EArBL,IA4BVuB,EAAQvB,EAAAA,QAAAA,IAAAA,WAAH,0DAAGA,CAAH,8CACmB,IA3BW,IAAe,EAC/B,EAAK,GAoE9B,EAtCgB,SAAC,GAAgB,IAAdwB,EAAa,EAAbA,OACf,GAAkCC,EAAAA,EAAAA,UAASD,EAAO,IAA3CE,EAAP,KAAkBC,EAAlB,KAIA,OACI,gBAAC5B,EAAD,KACI,gBAACmB,EAAD,KACI,gBAAC,EAAAU,EAAD,CACIC,OAAOC,EAAAA,EAAAA,GAASJ,GAChBK,IAAI,QACJC,MAAO,CACHC,MAAO,OACPC,OAAQ,WAIpB,gBAACZ,EAAD,KACKE,EAAOT,KAAI,SAACC,EAAMmB,GACf,IAAMN,GAAQC,EAAAA,EAAAA,GAASd,GACvB,OACI,gBAACO,EAAD,CAAON,IAAKD,EAAKoB,GAAIC,QAAS,WAlB9CV,EAAaH,EAkBmDW,MAC5C,gBAAC,EAAAP,EAAD,CACIC,MAAOA,EACPE,IAAI,QACJC,MAAO,CACHC,MAAO,OACPC,OAAQ,iBC3B5C,EAjCsB,SAAC,GAA2B,IAAzBI,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAE3B,OADApB,QAAQC,IAAImB,GAER,gBAACC,EAAA,EAAD,CAAQ7B,MAAO2B,EAAKG,IAAIC,YAAY/B,OAChC,gBAAC,EAAD,CAASa,OAAQc,EAAKK,QAAQC","sources":["webpack://architecture-portfolio/./src/templates/Layout/Layout.js","webpack://architecture-portfolio/./src/components/Gallery.js","webpack://architecture-portfolio/./src/templates/projectLayout.js"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport styled from 'styled-components';\r\n\r\nimport styles from './Layout.module.css';\r\n\r\nconst paths = [\r\n    ['projects', 'projects'],\r\n    ['interiors', 'interiors'],\r\n    ['awards', 'awards'],\r\n    ['about', 'about me'],\r\n];\r\n\r\nconst Wrapper = styled.div`\r\n    display: grid;\r\n    grid-template-rows: 160px 1fr 20px;\r\n    min-height: 100vh;\r\n    max-width: 1280px;\r\n    margin: auto;\r\n    /* background-color: lightgray; */\r\n`;\r\n\r\nconst Main = styled.main`\r\n    align-self: stretch;\r\n`;\r\n\r\nconst Header = styled.header`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 100%;\r\n    /* background-color: grey; */\r\n`;\r\n\r\nconst NavList = styled.ul`\r\n    display: flex;\r\n    flex-direction: row;\r\n    list-style: none;\r\n`;\r\n\r\nconst NavItem = styled.li`\r\n    margin-left: 60px;\r\n    /* color: black; */\r\n    text-decoration: none;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n    height: 40px;\r\n    width: 40px;\r\n    background-color: black;\r\n`;\r\n\r\nconst Section = styled.section`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    height: 100%;\r\n    padding: 20px 0;\r\n`;\r\n\r\nconst SectionTitle = styled.h2`\r\n    position: relative;\r\n    margin-left: 13%;\r\n    font-size: 36px;\r\n    font-weight: 800;\r\n    letter-spacing: 1.4px;\r\n    &::before {\r\n        content: '';\r\n        position: absolute;\r\n        top: 24px;\r\n        right: -18px;\r\n        display: block;\r\n        height: 10px;\r\n        width: 10px;\r\n        background-color: black;\r\n        z-index: 1000;\r\n    }\r\n`;\r\n\r\nconst Content = styled.article`\r\n    height: 100%;\r\n    /* width: 65%; */\r\n    /* padding: 0 80px; */\r\n    background-color: white;\r\n`;\r\n\r\nconst Footer = styled.footer`\r\n    height: 100%;\r\n    text-align: center;\r\n`;\r\n\r\nconst Layout = ({ children, title }) => {\r\n    return (\r\n        <Wrapper>\r\n            <Header>\r\n                <Link to='/' state={{ logo: false }}>\r\n                    <Logo />\r\n                </Link>\r\n                <nav>\r\n                    <NavList>\r\n                        {paths.map((item) => (\r\n                            <NavItem key={item[1]}>\r\n                                <Link to={`/${item[0]}`}>{item[1]}</Link>\r\n                            </NavItem>\r\n                        ))}\r\n                    </NavList>\r\n                </nav>\r\n            </Header>\r\n            <Main>\r\n                <Section>\r\n                    <SectionTitle>{title}</SectionTitle>\r\n                    <Content>{children}</Content>\r\n                </Section>\r\n            </Main>\r\n            <Footer>\r\n                <p>code by</p>\r\n            </Footer>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useState } from 'react';\r\nimport { getImage } from 'gatsby-plugin-image';\r\nimport { GatsbyImage } from 'gatsby-plugin-image';\r\nimport styled from 'styled-components';\r\n\r\nconst gridGap = 10;\r\nconst calcImageHeight = (containerWidth) => {\r\n    const imageWidth = (containerWidth - 2 * gridGap) / 3;\r\n    return (imageWidth / 3) * 2;\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 600px;\r\n`;\r\n\r\nconst MainImage = styled.div`\r\n    height: 400px;\r\n    width: 100%;\r\n    margin-bottom: ${gridGap}px;\r\n    background-color: lightgray;\r\n`;\r\n\r\nconsole.log(MainImage.inner);\r\n\r\nconst ImagesContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    grid-gap: ${gridGap}px;\r\n    width: 100%;\r\n`;\r\n\r\nconst Image = styled.div`\r\n    height: ${calcImageHeight(600)}px;\r\n    background-color: lightgray;\r\n`;\r\n\r\nconst Gallery = ({ images }) => {\r\n    const [mainImage, setMainImage] = useState(images[0]);\r\n    const handleClick = (index) => {\r\n        setMainImage(images[index]);\r\n    };\r\n    return (\r\n        <Wrapper>\r\n            <MainImage>\r\n                <GatsbyImage\r\n                    image={getImage(mainImage)}\r\n                    alt='image'\r\n                    style={{\r\n                        width: '100%',\r\n                        height: '100%',\r\n                    }}\r\n                />\r\n            </MainImage>\r\n            <ImagesContainer>\r\n                {images.map((item, i) => {\r\n                    const image = getImage(item);\r\n                    return (\r\n                        <Image key={item.id} onClick={() => handleClick(i)}>\r\n                            <GatsbyImage\r\n                                image={image}\r\n                                alt='image'\r\n                                style={{\r\n                                    width: '100%',\r\n                                    height: '100%',\r\n                                }}\r\n                            />\r\n                        </Image>\r\n                    );\r\n                })}\r\n            </ImagesContainer>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default Gallery;\r\n","import React from 'react';\r\nimport Layout from './Layout/Layout';\r\nimport { graphql } from 'gatsby';\r\nimport Gallery from '../components/Gallery';\r\n\r\nconst projectLayout = ({ data, pageContext }) => {\r\n    console.log(pageContext);\r\n    return (\r\n        <Layout title={data.mdx.frontmatter.title}>\r\n            <Gallery images={data.allFile.nodes}></Gallery>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport const query = graphql`\r\n    query Title($id: String!, $dir: String) {\r\n        mdx(id: { eq: $id }) {\r\n            frontmatter {\r\n                title\r\n            }\r\n            slug\r\n        }\r\n        allFile(\r\n            filter: {\r\n                extension: { eq: \"jpg\" }\r\n                relativeDirectory: { eq: $dir }\r\n            }\r\n        ) {\r\n            nodes {\r\n                id\r\n                childImageSharp {\r\n                    gatsbyImageData\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default projectLayout;\r\n"],"names":["paths","Wrapper","styled","Main","Header","NavList","NavItem","Logo","Section","SectionTitle","Content","Footer","children","title","to","state","logo","map","item","key","MainImage","console","log","inner","ImagesContainer","Image","images","useState","mainImage","setMainImage","G","image","getImage","alt","style","width","height","i","id","onClick","data","pageContext","Layout","mdx","frontmatter","allFile","nodes"],"sourceRoot":""}